@model Wtiau.Health.Web.Models.ViewModels.Model_StudentInfo
@using Wtiau.Health.Web.Models.Repository

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Portal.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)

    <div class="panel panel-default" style="margin: 0 auto;max-width:1500px;">
        <div class="panel-body">
            <div class="text-center">
                <h3>فرم اطلاعات فردی</h3>
            </div>
            <hr />
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Family, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.Family, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Family, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Gender, Rep_CodeGroup.Get_AllCodesWithGroupID((int)CodeGroup.Gender), new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })

                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BirthYear, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.BirthYear, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.BirthYear, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.National, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.National, Rep_CodeGroup.Get_AllCodesWithGroupID((int)CodeGroup.Nationality), new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.National, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BirthLocation, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-map-marker"></i></span>
                                @Html.EditorFor(model => model.BirthLocation, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.BirthLocation, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-phone-alt"></i></span>
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-phone"></i></span>
                                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.HomeType, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.HomeType, Rep_CodeGroup.Get_AllCodesWithGroupID((int)CodeGroup.HomeType), new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.HomeType, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Marriage, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Marriage, Rep_CodeGroup.Get_AllCodesWithGroupID((int)CodeGroup.Marriage), new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Marriage, "", new { @class = "text-danger" })
                    </div>

                </div>
                <hr />
                <div class="row">

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.University, new List<SelectListItem>() { new SelectListItem() { Value = "", Text = "لطفا کاربر مورد نظر را انتخاب کنید ..." } }, new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.College, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.College, new List<SelectListItem>() { new SelectListItem() { Value = "", Text = "لطفا کاربر مورد نظر را انتخاب کنید ..." } }, new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.College, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Grad, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Grad, Rep_CodeGroup.Get_AllCodesWithGroupID((int)CodeGroup.Grad), new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Grad, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Group, Rep_CodeGroup.Get_AllCodesWithGroupID((int)CodeGroup.Gender), new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Branch, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Branch, new List<SelectListItem>() { new SelectListItem() { Value = "", Text = "لطفا کاربر مورد نظر را انتخاب کنید ..." } }, new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BeforeUniversity, htmlAttributes: new { @class = "control-label" })
                            <div class="input-group">
                                <span class=" input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                                @Html.EditorFor(model => model.BeforeUniversity, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.BeforeUniversity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <hr />
                <div class="row">

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Blood, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Blood, Rep_CodeGroup.Get_AllCodesWithGroupID((int)CodeGroup.BloodGroup), new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Blood, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Insurance, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Insurance, Rep_CodeGroup.Get_AllCodesWithGroupID((int)CodeGroup.Insurance), new { @class = "form-control Select2_Normal" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Insurance, "", new { @class = "text-danger" })
                    </div>

                </div>

            </div>
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}

